<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi, Thinking</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-04T18:36:04.729Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kevin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python源码解析(0)-准备工作</title>
    <link href="http://yoursite.com/2017/02/05/%E6%8A%80%E6%9C%AF/Python/python_source_code_analysis_0_preparation/"/>
    <id>http://yoursite.com/2017/02/05/技术/Python/python_source_code_analysis_0_preparation/</id>
    <published>2017-02-04T16:24:58.000Z</published>
    <updated>2017-02-04T18:36:04.729Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>原想着这个寒假主要的学习任务就是阅读python源码，但是碍于一直在写论文，现在才开始着手学习。其实想看python源码的目的很简单，一来对python很感兴趣，想了解它的工作原理。二来以后可能也想从事这方面的工作，所以希望能加深对python的理解。关于阅读源码的总结也会记录下来，跟大家一块分享。这里主要分析的python源码是3.5.1版本的，如果在分析中出现了由于版本不同所带来的问题，欢迎大家一块讨论。<br>阅读源码一定要有目的性，特别是这种大型的编译系统。所以在这里列下一个阅读目标列表及记录完成时间，这个列表也会随着我阅读的情况不断更新。最后的文章也会根据这个的顺序来排布。</p>
<ol>
<li>数据类型<br>1.1 基本类 object<br>1.2 整型类<br>1.3 字符串类<br>1.4 list类<br>1.5 tuple类<br>1.6 dict类</li>
<li>内建函数<br>…</li>
</ol>
<a id="more"></a>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h5 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h5><p>首先需要准备python的源码，可以在<a href="http://www.python.org/" target="_blank" rel="external">python官方网站</a>下载。其次是需要一个编译器，<a href="https://docs.python.org/devguide/index.html" target="_blank" rel="external">开发者文档</a>中有详细说明如何编译python，我这里主要使用的是Windows系统，所以选用<a href="https://www.visualstudio.com/" target="_blank" rel="external">Visual Studio 2015</a> 作为编译环境。<br>CPython中使用<a href="http://hg-scm.org/" target="_blank" rel="external">Mercurial</a>作为版本控制工具，并且在编译的过程中也使用了Mercurial相关的命令，所以这里需要提前安装好Mercurial。在Unix系统下可以直接用apt-get来安装。在Windows系统下，使用<a href="http://tortoisehg.org/" target="_blank" rel="external">TortoiseHg</a>会跟好一点，这个里面集成了Mercurial。注意在安装完TortoiseHg之后查看一下系统环境变量Path中是否包含了TortoiseHg路径</p>
<p>安装完Mercurial之后，可以查看一下hg指令是否可以用，如果可以用的话就可以进行下一步了。</p>
<p>Windows下的源码编译文件都在PCbuild文件夹下，进入这个文件夹之后，查看readme.txt文件，我们可以根据这个文件的指导来编译。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Quick Start Guide</div><div class="line">-----------------</div><div class="line">1.  Install Microsoft Visual Studio 2015, any edition.</div><div class="line">2.  Install Subversion, and make sure &apos;svn.exe&apos; is on your PATH.</div><div class="line">3.  Run &quot;build.bat -e&quot; to build Python in 32-bit Release configuration.</div><div class="line">4.  (Optional, but recommended) Run the test suite with &quot;rt.bat -q&quot;.</div></pre></td></tr></table></figure>
<p>根据上面的步骤，我们还需要安装Subversion以确保svn指令能正确执行。我们去<a href="http://subversion.apache.org/" target="_blank" rel="external">Subversion</a>下载一个即可。在下载页面中对应的Windows版本下有很多镜像网站，选一个下载速度快一点的就可以了。不想那么麻烦的话可以直接在这里下载(<a href="https://www.visualsvn.com/files/Apache-Subversion-1.9.5.zip" target="_blank" rel="external">Apache Subversion command line tools</a>)。下载下来后解压缩出来，然后把其中bin文件的路径添加到系统环境变量Path中，然后进入cmd测试一下svn指令是否可以使用，如果可以的话我们就可以开始编译了。</p>
<h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><p>在PCbuild目录下执行”build.bat -e”,即可开始编译，编译过程大概需要15分钟左右。编译结束之后应该会在当前文件夹下面生成两个文件夹obj和win32。我们进入win32可以看到里面有一个python.exe文件，这个就是我们编译出来的python编译程序。我们可以执行以下这个文件，查看一下是否完整。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Python 3.6.0 (default, Feb  5 2017, 00:57:29) [MSC v.1900 32 bit (Intel)] on win</div><div class="line">32</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>上面那个时间是这个程序的编译时间。</p>
<p>回到PCbuild文件夹，执行一下”rt.bat -q”测试是否成功。这个测试会消耗一定的时间，它会运行405个测试文件。<br>下面是测试完成之后显示的结果。具体这些测试错误的原因还没有找到，但是目前还不妨碍使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">359 tests OK.</div><div class="line"></div><div class="line">2 tests failed:</div><div class="line">    test_strptime test_time</div><div class="line"></div><div class="line">1 test altered the execution environment:</div><div class="line">    test_site</div><div class="line"></div><div class="line">43 tests skipped:</div><div class="line">    test_crypt test_curses test_dbm_gnu test_dbm_ndbm test_devpoll</div><div class="line">    test_epoll test_fcntl test_fork1 test_gdb test_grp test_idle</div><div class="line">    test_ioctl test_kqueue test_nis test_openpty test_ossaudiodev</div><div class="line">    test_pipes test_poll test_posix test_pty test_pwd test_readline</div><div class="line">    test_resource test_smtpnet test_socketserver test_spwd test_ssl</div><div class="line">    test_syslog test_tcl test_threadsignals test_timeout test_tix</div><div class="line">    test_tk test_ttk_guionly test_ttk_textonly test_turtle</div><div class="line">    test_urllib2net test_urllibnet test_wait3 test_wait4 test_winsound</div><div class="line">    test_xmlrpc_net test_zipfile64</div><div class="line"></div><div class="line">Total duration: 16 min 54 sec</div><div class="line">Tests result: FAILURE</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div></pre></td></tr></table></figure>
<p>测试完成之后，我们的准备工作也就完成了，之后在阅读源码的时候会经常修改源码，然后编译来查看效果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;原想着这个寒假主要的学习任务就是阅读python源码，但是碍于一直在写论文，现在才开始着手学习。其实想看python源码的目的很简单，一来对python很感兴趣，想了解它的工作原理。二来以后可能也想从事这方面的工作，所以希望能加深对python的理解。关于阅读源码的总结也会记录下来，跟大家一块分享。这里主要分析的python源码是3.5.1版本的，如果在分析中出现了由于版本不同所带来的问题，欢迎大家一块讨论。&lt;br&gt;阅读源码一定要有目的性，特别是这种大型的编译系统。所以在这里列下一个阅读目标列表及记录完成时间，这个列表也会随着我阅读的情况不断更新。最后的文章也会根据这个的顺序来排布。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据类型&lt;br&gt;1.1 基本类 object&lt;br&gt;1.2 整型类&lt;br&gt;1.3 字符串类&lt;br&gt;1.4 list类&lt;br&gt;1.5 tuple类&lt;br&gt;1.6 dict类&lt;/li&gt;
&lt;li&gt;内建函数&lt;br&gt;…&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/python/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo+NexT中添加algolia search</title>
    <link href="http://yoursite.com/2017/01/29/%E6%8A%80%E6%9C%AF/Hexo/How_to_add_algolia_into_hexo/"/>
    <id>http://yoursite.com/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/</id>
    <published>2017-01-29T12:02:55.000Z</published>
    <updated>2017-01-29T16:04:56.972Z</updated>
    
    <content type="html"><![CDATA[<p>在Hexo里面文章多了以后就会出现难以查找内容的问题，所以就需要一个站内搜索的功能。我大致看了一下NexT上支持的集中站内搜索引擎，<a href="https://swiftype.com/" target="_blank" rel="external">Swiftype</a>因为注册需要一个企业邮箱，而本人学生党并没有企业邮箱。<a href="http://tinysou.com/" target="_blank" rel="external">微搜索</a>好像主页崩了，一直登陆不上去。像百度，google这样的本地搜索UI设计实在是不堪入目。然后就选择了algolia。好在NexT 5.1以上的版本已经支持了algolia搜索，接入也比较的方便。</p>
<p>这是一个法国初创公司做的，致力于在毫秒级时间内完成内容搜索，具体的细节可以上官方网站 <a href="https://www.algolia.com/" target="_blank" rel="external">algolia</a> 。搜索呈现像下面这样:</p>
<img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/result.png" alt="result.png" title="">
<a id="more"></a>
<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><ol>
<li><p>首先，上 <a href="https://www.algolia.com/" target="_blank" rel="external">algolia</a> 上注册一个账号，免费注册的账号可以试用14天，这期间所有的高级功能均可以使用。过了这个期限之后，只有部分功能可以使用，免费账户总共有10,000条记录，每个月有100,000的可操作数，对于一般用户应该是够用了。</p>
<p> 注册了账户之后，页面如下图所示，点击NEW INDEX。需要输入一个index name， 注意这个名字最好只包含字母，数字和下划线(_)，因为后端用js调用数据的时候需要用到这个index name，所以如果这个字符串里面出现了一些跟js语法像冲突的符号很有可能识别不了。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/algolia.png" alt="algolia.png" title="">
</li>
<li><p>完成之后，点击左边那个像钥匙一样的图标，查看自己的API Keys。注意Admin API Key是私密保存的，可以点击右边的小图标进行复制。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/key.png" alt="key.png" title="">
</li>
<li><p>进入站点配置文件_config.yml，在后面加入下面这些内容，其中将具体的值换成自己的Keys，注:不需要引号。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># website search</div><div class="line">## algolia</div><div class="line">algolia:</div><div class="line">  applicationID: &apos;your_Application_ID&apos;</div><div class="line">  apiKey: &apos;your_Search-Only_API_Key&apos;</div><div class="line">  adminApiKey: &apos;your_Admin_API_Key&apos;</div><div class="line">  indexName: &apos;your_Index_Name&apos;</div><div class="line">  chunkSize: 5000</div></pre></td></tr></table></figure>
</li>
<li><p>进入git bash，在根目录下安装algolia。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-algolia --save</div></pre></td></tr></table></figure>
</li>
<li><p>在hexo目录下提交站点。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo algolia #等价于hexo a</div></pre></td></tr></table></figure>
<p> 产生的结果大致如下:</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/hexo_a_result.png" alt="hexo_a_result.png" title="">
<p> 然后我们可以进入algolia的用户中心看一下是否内容已经提交上了。看一下红框中是否有内容。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/algolia_index.png" alt="algolia_index.png" title="">
<p> 这里要特别注意一下是否存在path字段，如果没有这个字段的话，搜索的时候会因为js无法检索到内容，而直接填入’undefine’，从而出现404异常。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/undefine.png" alt="undefine.png" title="">
<p> 这个时候我们要进入.\hexo\node_modules\hexo-algolia\lib\command.js文件，添加path字段进storedPost变量中，</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var storedPost = _.pick(data, [&apos;title&apos;, &apos;date&apos;, &apos;slug&apos;, &apos;path&apos;, &apos;content&apos;, &apos;excerpt&apos;, &apos;permalink&apos;]);</div></pre></td></tr></table></figure>
<p> 然后重新提交站点即可。</p>
</li>
<li><p>最后进入主题配置文件，找到algolia_search选项，将enable字段值改为true。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># Algolia Search</div><div class="line">algolia_search:</div><div class="line">  enable: true</div><div class="line">  hits:</div><div class="line">    per_page: 10</div><div class="line">  labels:</div><div class="line">    input_placeholder: Search for Posts</div><div class="line">    hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot;</div><div class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</div></pre></td></tr></table></figure>
<p> 最后重新生产站点，重新部署就完成了。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="页面空白"><a href="#页面空白" class="headerlink" title="页面空白"></a>页面空白</h4><p>在安装的时候出现了文章内容加载不出来，但是查看源码的时候HTML是完整的，而且对应位置的链接也可以，如下图一样：</p>
<img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/black.png" alt="black.png" title="">
<p>查看加载情况的时候发现js调用异常，发现是因为index name里面包含了引号，导致algolia后端的js出现异常，所以页面加载出现问题。这个时候只需要修改一下index name就可以了。</p>
<h4 id="搜索后无法正确跳转"><a href="#搜索后无法正确跳转" class="headerlink" title="搜索后无法正确跳转"></a>搜索后无法正确跳转</h4><p>搜索后出现无法正确跳转的原因是algolia没有获取path字段，所以最后的跳转地址没有正确填充，有可能会出现点击没有反应，也有可能像上文中提到的出现404异常，这个时候只需要按上文所说，在.\hexo\node_modules\hexo-algolia\lib\command.js文件里，添加path字段到storedPost变量中即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var storedPost = _.pick(data, [&apos;title&apos;, &apos;date&apos;, &apos;slug&apos;, &apos;path&apos;, &apos;content&apos;, &apos;excerpt&apos;, &apos;permalink&apos;]);</div></pre></td></tr></table></figure>
<blockquote class="blockquote-center">Kevin.记</blockquote>



]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Hexo里面文章多了以后就会出现难以查找内容的问题，所以就需要一个站内搜索的功能。我大致看了一下NexT上支持的集中站内搜索引擎，&lt;a href=&quot;https://swiftype.com/&quot;&gt;Swiftype&lt;/a&gt;因为注册需要一个企业邮箱，而本人学生党并没有企业邮箱。&lt;a href=&quot;http://tinysou.com/&quot;&gt;微搜索&lt;/a&gt;好像主页崩了，一直登陆不上去。像百度，google这样的本地搜索UI设计实在是不堪入目。然后就选择了algolia。好在NexT 5.1以上的版本已经支持了algolia搜索，接入也比较的方便。&lt;/p&gt;
&lt;p&gt;这是一个法国初创公司做的，致力于在毫秒级时间内完成内容搜索，具体的细节可以上官方网站 &lt;a href=&quot;https://www.algolia.com/&quot;&gt;algolia&lt;/a&gt; 。搜索呈现像下面这样:&lt;/p&gt;
&lt;img src=&quot;/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/result.png&quot; alt=&quot;result.png&quot; title=&quot;&quot;&gt;
    
    </summary>
    
      <category term="-技术 -Hexo" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF-Hexo/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(三)</title>
    <link href="http://yoursite.com/2017/01/29/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%B8%89)/"/>
    <id>http://yoursite.com/2017/01/29/小说/一个人的能力/(三)/</id>
    <published>2017-01-28T16:37:55.000Z</published>
    <updated>2017-01-29T16:05:05.652Z</updated>
    
    <content type="html"><![CDATA[<p>欧阳时家境不算好，</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欧阳时家境不算好，&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;Kevin.记&lt;/blockquote&gt;
    
    </summary>
    
      <category term="-小说 -一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4-%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo+NexT中添加标签和分类</title>
    <link href="http://yoursite.com/2017/01/28/%E6%8A%80%E6%9C%AF/Hexo/How_to_add_tags_page/"/>
    <id>http://yoursite.com/2017/01/28/技术/Hexo/How_to_add_tags_page/</id>
    <published>2017-01-28T10:02:55.000Z</published>
    <updated>2017-01-30T17:28:16.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加标签和分类"><a href="#添加标签和分类" class="headerlink" title="添加标签和分类"></a>添加标签和分类</h3><p>在Hexo中，有两种管理的方式，一种是使用分类的方式，这是一种有层次的分类方式，适用于大类别下套小类别的分类方式，例如：编程语言-python等。而还有一种是使用标签的方式，这种方式适用于同一级别的类别分类方式，例如：小说，论文等。<br>对应于具体的文章，可以在Front-matter中进行设定，例如：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 标签</div><div class="line">tages: </div><div class="line"> -小说</div><div class="line"> -论文</div><div class="line">---</div><div class="line"></div><div class="line">---</div><div class="line">title: 分类</div><div class="line">categories: </div><div class="line"> -编程语言</div><div class="line"> -python</div><div class="line">---</div></pre></td></tr></table></figure>
<p>在这种情况下，Hexo将会自动的将每一篇文章进行归档。</p>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>在很多时候我们点击标签页和分类页查看具体情况的时候会出现一些问题。这里描述一下常见的两种情况。</p>
<h4 id="文件路径包含中文"><a href="#文件路径包含中文" class="headerlink" title="文件路径包含中文"></a>文件路径包含中文</h4><p>在很多时候会报下面这种错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TypeError: The header content contains invalid characters</div></pre></td></tr></table></figure>
<p>出现这种问题的主要原因是路径中出现了中文，只需要将分类的路径改成英文即可。</p>
<h4 id="没有生产标签页和分类页"><a href="#没有生产标签页和分类页" class="headerlink" title="没有生产标签页和分类页"></a>没有生产标签页和分类页</h4><p>有时候还会出现下面这种问题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cannot get /tags/</div><div class="line">cannot get /categories/</div></pre></td></tr></table></figure>
<p>出现这种问题是因为配置路径和实际路径不对。配置路径在主题文件夹(.\hexo\themes\next)中的_config.yml文件里面。找到下面这样的描述，例如我使用tags表示标签页。需要检查一下是否在.\hexo\source文件夹中存在tags文件夹，如果不存在则需要创建tags标签页。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  about: /about</div><div class="line">  #archives: /archives</div><div class="line">  #sitemap: /sitemap.xml</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure>
<p>创建标签页的方法是使用hexo中的指令来添加，以tags为例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div></pre></td></tr></table></figure>
<p>执行这条指令之后，在.\hexo\source文件夹下会新增一个tags文件夹，里面有一个index.md。打开来之后里面只有title和date属性，我们需要添加一个type属性，修改成下面这样。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: tags</div><div class="line">date: 2017-01-28 01:55:09 #时间随意</div><div class="line">type: tags</div><div class="line">---</div></pre></td></tr></table></figure>
<p>分类页的情况一样，需要把type属性改成categories</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">date: 2017-01-28 02:15:09 #时间随意</div><div class="line">type: categories</div><div class="line">---</div></pre></td></tr></table></figure>
<p>完成修改之后重新生成部署即可。</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加标签和分类&quot;&gt;&lt;a href=&quot;#添加标签和分类&quot; class=&quot;headerlink&quot; title=&quot;添加标签和分类&quot;&gt;&lt;/a&gt;添加标签和分类&lt;/h3&gt;&lt;p&gt;在Hexo中，有两种管理的方式，一种是使用分类的方式，这是一种有层次的分类方式，适用于大类别下套小类别的分类方式，例如：编程语言-python等。而还有一种是使用标签的方式，这种方式适用于同一级别的类别分类方式，例如：小说，论文等。&lt;br&gt;对应于具体的文章，可以在Front-matter中进行设定，例如：&lt;/p&gt;
    
    </summary>
    
      <category term="-技术 -Hexo" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF-Hexo/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(二)</title>
    <link href="http://yoursite.com/2017/01/27/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%BA%8C)/"/>
    <id>http://yoursite.com/2017/01/27/小说/一个人的能力/(二)/</id>
    <published>2017-01-27T11:06:55.000Z</published>
    <updated>2017-01-29T16:05:02.197Z</updated>
    
    <content type="html"><![CDATA[<p>上午最后一节课总是显得那么漫长，特别还是数学课的时候，大家一边将老师写在黑板上的公式抄到笔记本之中，一边偷瞄墙上挂的时钟。等着秒钟一步一步的向前走，走完一圈又回到原点，好像时间又回到了最初的原点一般，停滞不前。终于，下课铃声响起，而老师上课的内容也基本讲完，高中的老师总是喜欢来下课之后再多占用一点时间，而刘老师也是一样，“我把作业布置完咱们就下课，今天做完习题册圆锥曲线最后的双曲线部分，每一个人最好都去推导一下三种圆锥曲线的表达式是怎么来的，有助于你们对这部分内容的理解，下课”。靠门边的同学像是听到了一声哨响一般，直接提着包冲出了教室。而李情旭，依旧默默的坐在那，回顾着刚刚上课记得笔记。“你怎么知道这节课老师心情不好的呀？”胡梦边收拾书包，边跟他闲扯。“因为我有超能力。”李情旭没有回头，一本正经的说出这句话。“你再扯，我吃饭去啦，拜拜”胡梦认为他在开玩笑，就打算去吃饭了。“拜”李情旭看着胡梦的背影默默的离开。</p>
<a id="more"></a>
<p>李情旭从出生开始，眼中的世界就和别人的不太相同。他看到的每一个人，头上都有一个小光点，闪烁着不同的光芒。他父母也带他去医院查过，但是并没有查出什么问题来。想着这件事并不会影响正常生活，所以大家也都没有再深究。而好奇心驱使着李情旭想探明这个光点究竟是什么，而不同的色彩又代表着什么。他开始观察每一个人头上的光点，渐渐发现当人们面带笑容时，头上的光点往往散发出黄色的光芒，而当人们脸上带有愁容的时候，头上的光芒往往是蓝色的。此刻，他意识到，这些光芒代表的是每一个人的内心情绪。而刘老师进门的时候，她的小光点散发着让人警觉的红色，这表示愤怒。</p>
<p>看了看墙上的时钟，距离放学已经过去半个小时了，这个时候他也该准备去吃饭了。他起身收拾东西，发现坐在后面的欧阳时还在那里看书，头顶上泛着深邃的蓝光。蓝色的光线在寂静的教室中显得格外的耀眼，空气中似乎都能感受出他的忧伤。李情旭看了看欧阳时，发现他目光呆滞，书中的文字并没有进入他的脑海。“欧阳时，你还不走呀？”李情旭决定跟他聊一下。“啊，等会就走。”欧阳时惊的一下抬起头，似乎才回过神来。“时间也不早了，一块去吃饭吧”，听到这句话，欧阳时才想起来看看时间，发现已经过了半个多小时了。“都这么晚啦，我不吃饭了”欧阳时把目光重新转向了书本。“大中午不吃饭下午哪有力气上课啊，现在也不算太晚，汤粉应该还有，走吧。”李情旭一把把他的书抽出来，放到自己桌上。欧阳时看到这种情况，感觉也不好再拒绝了，就只能勉强答应了他，“那走吧”。</p>
<p>午后的食堂已经不那么拥挤，他们各自买了一份汤粉，在食堂一个偏僻的角落坐下。这个位置是李情旭找的，他知道欧阳时现在心情很差，估计是什么不太容易说出口的事，所以找了一个偏僻的地方，这样才能更好的跟他谈心。“我看你刚刚魂不守舍的，有心事啊？”李情旭也比较直接，似乎并不打算拐弯抹角。“没有啊，应该是上课上的累了”欧阳时用筷子拨弄着自己碗里的面，似乎并不打算吃。“还没有心事，你的表情都写在脸上了，别憋着，说出来就好了，是不是看上哪个妹子不好意思说呀”李情旭看着他头上的蓝光，希望通过一句玩笑话转变一下气氛。“没，我也没资本看上别人呀”欧阳时看了看李情旭，似乎想说点什么，却又不知道该如何开口。“那你咋啦，没事，说出来就会好受了，而且我不跟别人说的”李情旭继续用语言来缓释他的心理防线，心中的事不愿意说无外乎就是怕别人知道，其实每个人都知道，倾诉是最好的释压的方式；只是，我们缺少一个能信任的倾听者。欧阳时看了看他眼中的班长，他第一次感受到有人如此关心自己。“我，家里出了点事。”</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上午最后一节课总是显得那么漫长，特别还是数学课的时候，大家一边将老师写在黑板上的公式抄到笔记本之中，一边偷瞄墙上挂的时钟。等着秒钟一步一步的向前走，走完一圈又回到原点，好像时间又回到了最初的原点一般，停滞不前。终于，下课铃声响起，而老师上课的内容也基本讲完，高中的老师总是喜欢来下课之后再多占用一点时间，而刘老师也是一样，“我把作业布置完咱们就下课，今天做完习题册圆锥曲线最后的双曲线部分，每一个人最好都去推导一下三种圆锥曲线的表达式是怎么来的，有助于你们对这部分内容的理解，下课”。靠门边的同学像是听到了一声哨响一般，直接提着包冲出了教室。而李情旭，依旧默默的坐在那，回顾着刚刚上课记得笔记。“你怎么知道这节课老师心情不好的呀？”胡梦边收拾书包，边跟他闲扯。“因为我有超能力。”李情旭没有回头，一本正经的说出这句话。“你再扯，我吃饭去啦，拜拜”胡梦认为他在开玩笑，就打算去吃饭了。“拜”李情旭看着胡梦的背影默默的离开。&lt;/p&gt;
    
    </summary>
    
      <category term="-小说 -一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4-%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(一)</title>
    <link href="http://yoursite.com/2017/01/27/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%B8%80)/"/>
    <id>http://yoursite.com/2017/01/27/小说/一个人的能力/(一)/</id>
    <published>2017-01-27T10:51:55.000Z</published>
    <updated>2017-01-29T16:05:10.444Z</updated>
    
    <content type="html"><![CDATA[<p>老师伴着上课的曲子进门，班长李情旭看了一眼老师，扭头对同桌胡梦说：“这节课别睡觉了，刘老师心情很不好”。老师走上讲台，把考试卷子放在讲台桌子上，把U盘插在电脑上，像往常一样， 准备把上课的课件拷到电脑上。《土耳其进行曲》还在耳边回荡，也不清楚这所学校为什么要用这个曲子作为上课的铃声。估计是它的节奏比较欢快，能让人产生一种愉悦的心情以面对接下来四十五分钟的枯燥。老师还在操作着电脑，课间喧闹的气氛还没有消散，大家都七嘴八舌的讨论着。胡梦抬了抬头，看了看老师，像往常一样，没有任何的变化。胡梦又把头低了下来，枕在自己的手上。嘟囔了一句:“别闹”。李情旭也没有再理睡梦中的同桌，把目光转向投影出来的电脑画面。</p>
<a id="more"></a>
<p>这个班级的座位与大多数中学相同，每两排座位靠拢成一个大排，一共四大排，每个大排中间留出够一个人正常通行的空隙。而投影的位置在靠近窗户的位置，大概在第三大排的前方偏左。他们俩的位置在第三排的第二行。李情旭坐在左边，胡梦在右边。刘老师则在胡梦旁边过道的正前方。</p>
<p>这位老师姓刘，全名叫刘蕊，是一位年轻有为的女老师，不到三十岁就已经评上了国家特级教师，讲的是数学课，教学主张因材施教，在她的心中，每一个人都有其所能适应的教学方式，有些人给一些压力，才能将心思放在学习上，有一些人需要鼓励，才能进步，给压力反倒会让他们手足无措。还有一些人自我约束能力强，自己能把控好自己，约束过多了反倒会产生叛逆心理。李情旭属于第一种人，而胡梦则是第二种。在胡梦眼中，刘老师是一个和蔼可亲的人，经常找自己谈心，所以她的课 是胡梦最放松的课。</p>
<p>投影里显示着老师的操作，与往常不同的是，这次刘老师除了从U盘里拷贝了一个课件文档以外，还拷贝了一份表格文档。他将表格文档打开，每个人的学号，姓名，每道题的得分赫然投影到幕布之上。他抬起头，把两只手放在桌子上，静静的看着下面的同学。大家还在喧闹着，慢慢的，一些同学注意到了老师的举动，逐渐降低了自己的音量。但是，教室里依旧存在着细声细语。似乎总有那么一些人，无法控制住自己，总想把自己心里的八卦说出来。第二排第二行的高忆侧了下头，低声对着同桌柳知说：“昨天她的鬓发上就缠着那个线头，今天还在那，她昨天晚上一定没有洗头”。柳知一脸诧异的看着她：“这你都记得，你每天都在看些什么啊”。“你们什么时候停下来，我什么时候开始上课。”说完这话，刘老师坐了下来，静静的看着每一个人。大家看着讲台上表情严肃的老师，都知道情况不对。教室一时间变得十分寂静，没有任何的声响，电扇的声音在头顶上盘旋。</p>
<p>“你们怎么不讲了，继续讲呀”带着挑衅的语气，她的这句话划破了死一般的寂静。如果说刚才的沉默让每一个人都神情紧张，那么现在，每一个人已经开始畏惧。大家都低下了头，生怕与老师有过多的眼神接触。“你们看看你们的成绩”，刘老师抬起了手，不停的点着投影在幕布上的表格。大家都抬起了头，努力的寻找自己的名字，看看自己处在一个什么样的位置。</p>
<p>实际上，这个班的数学成绩一直是全校排名第一，但是刘老师认为，如果一直只看全校成绩，第一名的优越感容易让大家松懈下来，迟早会被人超越。所以，她自己设计了一种成绩表示，她称之为自比分。每次考试之后，根据全年级的平均分，确定这次考试的难度系数，然后将每个人的成绩统一到同一难度系数的分值下。然后每次考试的成绩都是这次考试对上次考试的分数差值。自比分强调每个人应该与自己做比较，正值说明你在进步，负值说明你在退步。而这次考试，除了胡梦，高忆和欧阳时，其他人都是负值。但是高忆和欧阳时是满分，而胡梦依旧是全班最后一名。</p>
<p>刘老师等着同学们寻找自己的名字，她环顾四周，看着大家脸上的表情。这时发现胡梦趴在那，大吼了一声，”胡梦”，胡梦猛的抬起了头，眼神充满着惊恐。”别以为你自比分高就心安理得了，你现在成绩还是全班最后一名，你努力的还不够。” 其实，胡梦并不知道自己的自比分到底是多少，听到刘老师这么一说，才看向投影里的成绩表，原来自己的自比分相较于上一次考试高了一个档位，在全校的排名也前进了一百多名。虽然刚刚被老师说了一通，但是看到这个分数心里还是很高兴的。</p>
<p>“好了，还想看成绩的同学下课再看，我们现在开始讲试卷，班长，把这些试卷发下去。”刘老师边说边把电脑上的表格文件关掉。李情旭走到老师旁边，拿走了一打试卷，分发给大家。</p>
<p>回到桌位上，李情旭看了一眼胡梦，胡梦拿到自己的试卷，嘟囔了一句:”这样真的有效。”，”什么有效？”李情旭很不解的看着她。”没啥”。胡梦抬起头，看向老师。而李情旭微微一笑，也转头看向了老师。</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老师伴着上课的曲子进门，班长李情旭看了一眼老师，扭头对同桌胡梦说：“这节课别睡觉了，刘老师心情很不好”。老师走上讲台，把考试卷子放在讲台桌子上，把U盘插在电脑上，像往常一样， 准备把上课的课件拷到电脑上。《土耳其进行曲》还在耳边回荡，也不清楚这所学校为什么要用这个曲子作为上课的铃声。估计是它的节奏比较欢快，能让人产生一种愉悦的心情以面对接下来四十五分钟的枯燥。老师还在操作着电脑，课间喧闹的气氛还没有消散，大家都七嘴八舌的讨论着。胡梦抬了抬头，看了看老师，像往常一样，没有任何的变化。胡梦又把头低了下来，枕在自己的手上。嘟囔了一句:“别闹”。李情旭也没有再理睡梦中的同桌，把目光转向投影出来的电脑画面。&lt;/p&gt;
    
    </summary>
    
      <category term="-小说 -一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4-%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>序</title>
    <link href="http://yoursite.com/2017/01/22/Preface/"/>
    <id>http://yoursite.com/2017/01/22/Preface/</id>
    <published>2017-01-22T13:34:58.000Z</published>
    <updated>2017-01-28T16:00:27.863Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Hi-Thinking"><a href="#Hi-Thinking" class="headerlink" title="Hi, Thinking!"></a>Hi, Thinking!</h4><p>现实世界充满喧嚣，启程时的誓言已被掩盖。路途中四处观花，轻尝美景的芬芳。丽影无数，却只略观，此时想起回眸，不晚，不晚。<br>掩埋野蜂的狂浪，静坐思考，揭开藏在深处的远方。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Hi-Thinking&quot;&gt;&lt;a href=&quot;#Hi-Thinking&quot; class=&quot;headerlink&quot; title=&quot;Hi, Thinking!&quot;&gt;&lt;/a&gt;Hi, Thinking!&lt;/h4&gt;&lt;p&gt;现实世界充满喧嚣，启程时的誓言已被掩盖。路途中四处观花，轻尝
    
    </summary>
    
    
  </entry>
  
</feed>
