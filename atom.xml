<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi, Thinking</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-16T10:58:46.037Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kevin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《异类-不一样的成功启示录》 马尔科姆 格拉德威尔 著</title>
    <link href="http://yoursite.com/2017/02/13/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/Outliers_The_Story_of_Success/"/>
    <id>http://yoursite.com/2017/02/13/读书笔记/Outliers_The_Story_of_Success/</id>
    <published>2017-02-13T15:18:55.000Z</published>
    <updated>2017-02-16T10:58:46.037Z</updated>
    
    <content type="html"><![CDATA[<p><small><em>总字数：6573字，阅读时间：12分钟</em></small></p>
<blockquote>
<p>成功=机遇+努力+智力+环境</p>
</blockquote>
<p>这本书有点意思，我读了两遍。第一遍读的时候并没有读出他内在的逻辑和深度，只是单纯的将这本书看成是一本励志书籍来读，但是第二遍读的时候发现，这本书确实相当的有意思，整本书论证了一件事情，获得成功需要哪些条件？而答案，也就是这本书的核心观点，可以由本文的第一句话高度概括。</p>
<h4 id="机遇"><a href="#机遇" class="headerlink" title="机遇"></a>机遇</h4><p>本书中，格拉德威尔认为，机遇是让努力成为可能的前提。本书开篇就引用了《新约-马太福音》中的名言</p>
<blockquote>
<p>凡是有的，还要加给他，叫他有余。没有的，连他所有，也要夺过来。</p>
</blockquote>
<p>马太效应是一种强者越强，弱者越弱的反馈效应。本书从加拿大曲棍球联赛运动员奇特的出生月份分布入手，揭示了机遇对于成功影响方式。</p>
<a id="more"></a>
<p>格拉德威尔在统计了加拿大曲棍球联赛顶尖运动员的出生日期，发现大多数运动员出生于一年的头三个月，而越往后的月份人数越少。在分析了一系列原因之后，他发现，出现这种现象的原因是因为加拿大曲棍球联赛的注册时间是1月1日，而且要求注册时年满9岁。这就意味着，在一年中越早出生的人，到了可以注册的年龄时，将比一年中稍晚出生的人多出一段发育时间。对于青少年而言，半年的时间足以让一个人的体格发生很大的变化。在这种情况下，体格越好的人，在比赛中就越有优势，在训练中就越能得到教练的青睐，可以获得更多的训练机会和比赛机会。结合马太效应，强者最终保留在赛场上，而弱者将一步步被淘汰。</p>
<p>在调查了同样具有注册时间的英国足球联赛后，他发现了同样的出生月份分布情况。英国足球联赛的注册时间是9月1日。在英国顶级比赛中，出生于9月，10月，11月的运动员占据了绝大多数。这也进一步论证了他的观点。</p>
<p>值得一提的是，在深入挖掘了不同青少年在划分到不同等级的联赛之后，格拉德威尔发现，真正影响不同人最后结果的原因是训练时间的差异。</p>
<h4 id="努力"><a href="#努力" class="headerlink" title="努力"></a>努力</h4><p><strong>在成为一个行业里的专家，需要达到一万小时的训练时间</strong>。格拉德维尔在统计了一个艺术学院的小提琴班的所有学生，并对她们可能达到的成就进行了分成了能成为顶尖艺术家，能成为普通从业者和能成为艺术教师等三个组。他发现，三个组中的所有人，都差不多同一时间开始接触小提琴，并且前期的每日练琴时长都大同小异。只是到了12岁之后，才出现了不同的情况。对于被认为能成为顶尖艺术家组的人，在12岁以后，依旧保持着每日8个小时的训练时间，而对于被认为能成为艺术教师的人，每天的训练时间只有4个小时。在这种情况下，当大家都毕业的时候，被认为能成为顶尖艺术家的人已经达到了一万个小时的训练时间，而被认为能成为艺术教师的人只有四千个小时的训练时间。训练时间的差距使得人们在技能上出现了质的差距。</p>
<p>对于曲棍球运动员而言，在注册之后，由于起初所分配的联赛级别不同，所能参加的比赛场次也有很大差距。在这种情况下，被分到国家级联赛的青少年就相当于能成为顶尖艺术家的小提琴手，他们有大量的训练时间，有大量的上场机会。等到成年之后，他们就顺理成章的称为了行业内的佼佼者。</p>
<p>其次，本书对前微软总裁，前世界首富比尔·盖茨进行了分析。比尔·盖茨所在的中学，有基金会资助购买了一台电脑。在那时，电脑相当昂贵，普通人基本上不可能接触到电脑。比尔·盖茨接触到电脑后，被深深的吸引。每天都使用大量的时间在编程上。由于上机时长受限，他跟他当时的同学一起给一家软件公司编写程序，回报就是能获得上级时长。其后，他又发现华盛顿大学的机房可以申请使用，并且发现了其中在使用时长的一个漏洞，从而可以无限时使用电脑。在这种情况下，等到他开始编写MS-DOS系统的时候，他已经有了超过一万个小时的编程经验。</p>
<p>相同的例子还有甲壳虫乐队，其最开始也是一个默默无闻的小乐队，在德国的酒吧中演唱，但是其签约的公司给了他们大量的演出安排，并且会演唱各种形式的音乐，使得他们每天要演唱8到10个小时，而且可能在周末也没有休息时间。他们表示，一年中可能有两百多天都需要这样的长时间的演出。在这样的训练强度下，经过了4，5年的时间，他们一跃成为最为著名的乐队之一。</p>
<p>格拉德威尔表示，在大多数人获得成功时，都已经经过了一万个小时的训练，获得这种训练强度需要一定的机会，就像比尔·盖茨所在的学校恰好购入了一台计算机，并且在无法使用中学计算机时能有公司提供上机时长；甲壳虫乐队签约的公司能提供足够多的演出机会。上文提到的曲棍球的例子也是如此，在注册时被选入国家级联赛，从而带来了足够多的训练机会。</p>
<h4 id="智力"><a href="#智力" class="headerlink" title="智力"></a>智力</h4><p>智商是不是成功的要素之一？答案是肯定的。但是我们通常高估了智商的影响。这个世界上，并不是智力越高，就会越成功。</p>
<p>本书论证了斯坦福心理学家刘易斯·特曼在一战后的研究。特曼在发现一个贫民区长大的小孩亨利·考埃尔拥有超群的智力之后，开始不断寻找世界上智力超群的人。他在小学中进行智力测试，并将智商在140至200之间得学生挑选出来作为研究样本，而这些人也被称之为“特曼人”。他详细记录了这些人的成长经历及杰出成就。他的研究发现，在有这些人参加的各种比赛或者活动中，都能在获奖名单中看到他们的名字。所以特曼认为高智商是成功的关键因素，“对于个体而言，没有什么比他的智商更重要”。</p>
<p>但是，格拉德威尔列举出诺贝尔获奖者所属学校的名单发现，这些获奖者中，不仅仅只有哈佛大学，麻省理工大学这样的顶尖院校，也有迪堡大学，圣十字学院这样被认为不是那么好的学校。而且在诺贝尔获得者中，威廉·肖克利和路易斯·阿尔瓦雷诺在小学时并没有通过特曼的智力测试。这从一个侧面反映出了并不是高智商一定就会能获得更好的成就。</p>
<p>本书在智商对成功的影响这个方面，给出的主要观点是<strong>智商能达到正常人即可，超过正常水平之后对成功的影响程度将变小</strong>。</p>
<p>本书中通过两个对比人物来表明智力对于成功的影响。一个是克里斯托弗·兰根，另一个是著名的物理学家罗伯特·奥本海默。他们俩都属于智力超群的人，克里斯托弗·兰根的智力达到180，参加了美国综艺节目《以一敌百》（一个由一人向一百个人发起答题挑战的节目）并获得了丰厚的奖金。罗伯特·奥本海默是原子弹之父，是曼哈顿计划的带头人。</p>
<p>但从智力上来说，克里斯托弗·兰根的智力要高于罗伯特·奥本海默，但是奥本海默成为了世界知名的人物，而兰根却无人知晓。格拉德威尔深入分析了这两个人的生活情况，得出了一个结论：<strong>在实际环境当中，对于智商达到正常水平的人，“实用智商”（处理社会中出现各种问题的能力，受社会阅历的影响）显得更为重要</strong>。</p>
<p>兰根出生于一个贫困家庭，母亲改嫁过多次。其继父喜欢酗酒，经常不回家，而且曾使用兔笼关押他们。其弟弟表示当时没有任何一所学校认为兰根有过人的智慧。兰根中学毕业之后申请了两所高校的全额奖学金。他在里德学院学习时，由于母亲没有按时提交父母经济状况说明，导致其失去了第二年的奖学金。他埋怨学校没有任何的通知。在期末考试后，成绩只有F的他离开了里德学院。一年半后，其进入蒙大拿州立大学学习。在一个冬天，因为学校距离小镇有13英里，而他的汽车动力系统出问题了，所以他希望调整他的课程到下午，这样中午就可以搭乘小镇农场工人的顺风车上学。但是他的导师看到了他在里德学院的生活状况之后，认为他应当为了学习做出一定的牺牲，并且驳回了他的请求。在这样艰苦的环境下，他最后认为即使没有受过高等教育也可以完成很多事情，最终离开了大学。格拉德威尔分析这两次学习经历是他人生中的转折点，他认为兰根本可以获得博士学位，并在大学任职。但是其拙略的社交能力，使得其无法融入大学生活，使其认为这两所学校根本就是一个结构庞大，体制僵硬的官僚机构。而这一切的根源在与其幼年时的经历。家庭生活使得其没有与外界沟通的能力，对于调整课程时间这样在大学生中经常出现的事情都无法做到很好的沟通。</p>
<p>而相对而言，奥本海默是一个完全相反的例子。奥本海默也是一个智力超群的人，在三岁时已经可以完成各种实验，五岁时就开始学习化学和物理。奥本海默在进入剑桥大学攻读博士学位期间，由于其天赋在于理论物理而其导师却让其做一些繁琐的物理实验，导致其情绪及其不稳定。最后他企图用实验室中的化学试剂毒死其导师。由于其导师发现了这个事情而没有出现伤亡。他在被叫到学校办公室后，进过了长时间的漫谈，最终的处罚结果仅仅只是留校察看。同样是在大学时期面临危机，而奥本海默却有办法为自己的谋杀辩护。而兰根却连调整课程时间都无法完成。</p>
<p>这种能力的不同被心理学家罗伯特·斯滕伯格称之为“实用智商”，它指的是<strong>让你正确认识自身处境，并且达到自己目的的能力</strong>。这种能力与一般的智商（分析推理智商）并没有直接的联系。“实用智商”主要源自于家庭生活环境，与幼年的成长有很大的关系，相当于是一种社会经验。兰根幼年时在家庭生活中出现的虐待，使其愤恨权威 并且喜欢独来独往，而奥本海默从小就被鼓励尝试。奥本海默幼年时对岩石的兴趣，使其在12岁时就尝试与当地的地质学家交流，并且受到邀请到纽约矿物学俱乐部发表演说。面对全是成年人的地质学家和岩石爱好者，奥本海默虽然有些害羞、笨拙，但是其依旧完成了演讲，并获得了热烈的掌声。这样的社会经历，使他学习到了如何与人交流才能达到自己的目的，而这就是“实用智商”。</p>
<p>回过头来看上文提到的“特曼人”。在特曼的资料中，所有760个“特曼人”长大后根据表现情况被分为了三个不同的小组。表现突出的150人小组中90%从大学毕业，其中98%人有研究生学历。而表现最差的150人小组中，有三分之一人有大学辍学经历，四分之一人只有高中学历。是什么原因导致了如此大的差距，特曼从个中方面进行了分析：身体和精神状态，业余爱好和职业，成长过程中的智商变化。但是都没有很好的解释这个现象。格拉德威尔指出，特曼缺少了对家庭背景的分析。他发现，在表现突出的组中，绝大部分人来自中产阶级或者上层家庭。而表现最差的组中，几乎三分之一的人，父母八年级之前就辍学了。</p>
<p>格拉德威尔表示，这些智商超群的天才<strong>缺少的是一种健康的成长环境，没有养成正确面对世界的态度</strong>。这是导致他们最终走向没落的原因。</p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>与前文中学习环境不同，这里所指的环境是运用环境，也就是社会需求。事实上，环境才是最为依靠运气的因素。</p>
<p>格拉德威尔运用大量的实例来表达环境的重要性。他在列举了《福布斯》人类历史上最富有的75人发现，75个人中，有14个美国人出生在19世纪30年代到40年代。事实上，在人类历史长河中，这个比例是相当可观的。而出现这种情况的主要原因在于，19世纪60年代到70年代，正是美国历史上经济发生最大变革的时代。而这个时候，出生于19世纪30年代到40年代的里正好是出于20到30岁左右，能把握住这样的机遇。如果你出生在40年代之后，会由于年龄太小和错失机会。如果出生在20年代，则会因为思维老化而赶不上时代潮流。所以，30年代到40年代的这10年出生的人，才能赶上美国的黄金时代，并且抓住这样的机遇。</p>
<p>同样，我们再来回忆一下前面提到的比尔·盖茨，计算机发展的辉煌时代在于20世纪70年代。准确的说是1975年《大众电子》杂志报道的世界上第一台微机Altair 8800。那么，如果你从事的是计算机行业，如果在这个时候你的年龄比较高了，你很有可能进入IBM这样大型的企业工作，而不会想着去改变世界。同样，如果你的年级很小，那么你并不可能在这个时代中有所作为。所以对于这个黄金时期来说，你的出生年月最好是在1955年左右。看看比尔·盖茨，出生于1955年10月28日，似乎就是为了这个时代而生的。</p>
<p><strong>环境的需求让经过一万小时的训练有了用武之地，而这也是让人成功的关键一步</strong>.</p>
<h4 id="根源"><a href="#根源" class="headerlink" title="根源"></a>根源</h4><p>上文中提到了那么多的成功的影响因素，都是外显的特性，是个人或者环境所表现出来的要求。但是格拉德威尔似乎不满足于仅仅只看到成功所需求的特性，他还更深入的了解到到底是什么因素影响到了不同人之间表现出不同特性的原因。所以，其深入分析了几个事例，发现了留存于传统文化中的影响。</p>
<p>在分析了肯塔基州中哈兰小镇中的两个创始家族的矛盾缘由，作者发现，传统文化的影响使得人们的处事方式大相径庭。在哈兰小镇中，霍华德家族和特纳家族的纷争，导致了两大家族多次发生枪战，并出现了大规模的伤亡。事实上，在深入调查了相关事件后，格拉德威尔发现，在19世纪80年代，整个肯塔基州出现过大量的争斗事件，谋杀案件的起诉书有上千份。而这些冲突的根本原因来自于这个地区的“荣誉文化”。</p>
<p>在高原地区，人们赖以生存的主要产业是畜牧业。相较于农民由于耕作所形成的合作文化，牧民显得相当封闭。牧民们经常需要担忧自己的动物丢失，在不断受到威胁后，他们必须要表现出进攻性，他们需要通过言行来证明自己不是弱者。他们接受来自外界的任何挑战，他们会奋起反抗任何一种轻视。而这种生活方式使得他们慢慢形成了一种荣誉文化，他们的大多数争执不是为了个人利益，而是为了荣誉，为了自己的荣誉战斗。事实上，在20世纪90年代，密歇根大学的两位心理学家多夫·科恩和理查德·尼斯贝特就进行过一项荣誉文化的实验。他通过对比发现，美国南部的年轻人，在面对被骂“混蛋”这样的侮辱之后，表现出了比北方人更高程度的愤怒情况。他们发现，决定他们反应程度的不是感情的稳定性或者身体的强壮程度，而是你来自哪里。北方人主要用娱乐的方式处理突发事件，所以在面对问题是，他们通常一笑而过，用这种方式化解愤怒。而南方人却显得十分愤怒。事实上，<strong>这些人已经摆脱了祖先们的生活方式，但是这种荣誉文化的依旧流传在他们的内心，一代又一代的被传承下来</strong>。</p>
<p>同样，我们可以对比分析一下亚洲文化和欧洲文化。在中国，农业耕作是主要的生产方式，固定租金的租地制度使得田地中多余的产出均归农民所有。这使得农民们养成了勤劳致富的思维方式，由于每个人的耕种面积少，他们会精确计算每一个步骤的时间点，耕地，插秧，施肥，除虫，这些操作保证了每一分土地都能达到最大的产出。而在冬季时分，农民们也不会闲着，编织竹篮，制作大酱。在中国，农民的年工作时间多达3000多个小时。“一分耕耘，一分收获”，中国的传统谚语也体现出了中国人的生活哲学。而与欧洲文化不同，欧洲采取的则是雇佣制度，农民的收入来自于贵族的报酬，而土地的收成并不会对他们的财富产生多大的影响。在这种情况下，农民并不会起早贪黑的去田里工作。而且，由于耕地面积相对较广，他们更推崇于“机械化作业”，所以在他们的思维方式中，要提高产量的主要方式则是耕种耕种更多的土地，而他们的年工作时间在1000小时左右。。相对于这种情况而言，他们的后代更加推崇一种休闲的生活。俄国的谚语“没有老天的恩慈，地理哪来的粮食”也是他们在这种制度下面体现出来的宿命论思想和内心的悲观主义。</p>
<p>在这样的传统文化影响之下，亚洲人能表现出更加勤奋的工作状态。在学校中，他们能会坚持更加长的学习时间，他们能比别人付出更多的努力。而这些辛勤的劳动也是亚洲人收益颇丰。事实上，在对比国际数学竞赛的比赛结果就能看的出来，亚洲人能表现出更优异的成绩，这不是因为他们的智商有多高，仅仅只是因为他们能坚持做更多的题。宾夕法尼亚大学的教育学者俄林·波发现，让参加TIMSS竞赛（国际数学和科学测评趋势）的青少年填写一份冗长的问卷，这份问卷仅包含父母教育程度，对朋友的描述等无意义的问题。而这份问卷的成绩由答题数量来决定。他惊奇的发现，问卷排名与数学竞赛的结果几乎完全一样。</p>
<p>在传统文化的影响下，我们表现出不同的工作态度，生活态度。而这些态度，在后续指导这我们不断前行。但是，群体的影响下，个体的特性依旧可以得意保留。归根结底，<strong>影响成功最关键的因素在与努力程度</strong>。智力能达到正常即可。传统文化和机遇都只是让人们能更加容易实现达到专业所要求的努力程度。</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>格拉德威尔的这本书里面蕴含了大量的历史实例，深入分析了各种影响因素在成功中的作用。大量的故事描述使得阅读过程轻松愉悦。但是，故事描述过于分散，使得很难抓住书中的逻辑点，难以总结作者想要表述的观点。总体而言，是一本值得当床前读物阅读的书籍。</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;small&gt;&lt;em&gt;总字数：6573字，阅读时间：12分钟&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成功=机遇+努力+智力+环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这本书有点意思，我读了两遍。第一遍读的时候并没有读出他内在的逻辑和深度，只是单纯的将这本书看成是一本励志书籍来读，但是第二遍读的时候发现，这本书确实相当的有意思，整本书论证了一件事情，获得成功需要哪些条件？而答案，也就是这本书的核心观点，可以由本文的第一句话高度概括。&lt;/p&gt;
&lt;h4 id=&quot;机遇&quot;&gt;&lt;a href=&quot;#机遇&quot; class=&quot;headerlink&quot; title=&quot;机遇&quot;&gt;&lt;/a&gt;机遇&lt;/h4&gt;&lt;p&gt;本书中，格拉德威尔认为，机遇是让努力成为可能的前提。本书开篇就引用了《新约-马太福音》中的名言&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;凡是有的，还要加给他，叫他有余。没有的，连他所有，也要夺过来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;马太效应是一种强者越强，弱者越弱的反馈效应。本书从加拿大曲棍球联赛运动员奇特的出生月份分布入手，揭示了机遇对于成功影响方式。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python源码解析(0)-准备工作</title>
    <link href="http://yoursite.com/2017/02/05/%E6%8A%80%E6%9C%AF/Python/python_source_code_analysis_0_preparation/"/>
    <id>http://yoursite.com/2017/02/05/技术/Python/python_source_code_analysis_0_preparation/</id>
    <published>2017-02-04T16:24:58.000Z</published>
    <updated>2017-02-16T10:58:31.677Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>原想着这个寒假主要的学习任务就是阅读python源码，但是碍于一直在写论文，现在才开始着手学习。其实想看python源码的目的很简单，一来对python很感兴趣，想了解它的工作原理。二来以后可能也想从事这方面的工作，所以希望能加深对python的理解。关于阅读源码的总结也会记录下来，跟大家一块分享。这里主要分析的python源码是3.6.0版本的，如果在分析中出现了由于版本不同所带来的问题，欢迎大家一块讨论。<br>阅读源码一定要有目的性，特别是这种大型的编译系统。所以在这里列下一个阅读目标列表及记录完成时间，这个列表也会随着我阅读的情况不断更新。最后的文章也会根据这个的顺序来排布。</p>
<ol>
<li>数据类型<br>1.1 基本类 object<br>1.2 整型类<br>1.3 字符串类<br>1.4 list类<br>1.5 tuple类<br>1.6 dict类</li>
<li>内建函数<br>…</li>
</ol>
<a id="more"></a>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h5 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h5><p>首先需要准备python的源码，可以在<a href="http://www.python.org/" target="_blank" rel="external">python官方网站</a>下载。其次是需要一个编译器，<a href="https://docs.python.org/devguide/index.html" target="_blank" rel="external">开发者文档</a>中有详细说明如何编译python，我这里主要使用的是Windows系统，所以选用<a href="https://www.visualstudio.com/" target="_blank" rel="external">Visual Studio 2015</a> 作为编译环境。<br>CPython中使用<a href="http://hg-scm.org/" target="_blank" rel="external">Mercurial</a>作为版本控制工具，并且在编译的过程中也使用了Mercurial相关的命令，所以这里需要提前安装好Mercurial。在Unix系统下可以直接用apt-get来安装。在Windows系统下，使用<a href="http://tortoisehg.org/" target="_blank" rel="external">TortoiseHg</a>会跟好一点，这个里面集成了Mercurial。注意在安装完TortoiseHg之后查看一下系统环境变量Path中是否包含了TortoiseHg路径</p>
<p>安装完Mercurial之后，可以查看一下hg指令是否可以用，如果可以用的话就可以进行下一步了。</p>
<p>Windows下的源码编译文件都在PCbuild文件夹下，进入这个文件夹之后，查看readme.txt文件，我们可以根据这个文件的指导来编译。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Quick Start Guide</div><div class="line">-----------------</div><div class="line">1.  Install Microsoft Visual Studio 2015, any edition.</div><div class="line">2.  Install Subversion, and make sure &apos;svn.exe&apos; is on your PATH.</div><div class="line">3.  Run &quot;build.bat -e&quot; to build Python in 32-bit Release configuration.</div><div class="line">4.  (Optional, but recommended) Run the test suite with &quot;rt.bat -q&quot;.</div></pre></td></tr></table></figure>
<p>根据上面的步骤，我们还需要安装Subversion以确保svn指令能正确执行。我们去<a href="http://subversion.apache.org/" target="_blank" rel="external">Subversion</a>下载一个即可。在下载页面中对应的Windows版本下有很多镜像网站，选一个下载速度快一点的就可以了。不想那么麻烦的话可以直接在这里下载(<a href="https://www.visualsvn.com/files/Apache-Subversion-1.9.5.zip" target="_blank" rel="external">Apache Subversion command line tools</a>)。下载下来后解压缩出来，然后把其中bin文件的路径添加到系统环境变量Path中，然后进入cmd测试一下svn指令是否可以使用，如果可以的话我们就可以开始编译了。</p>
<h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><p>在PCbuild目录下执行”build.bat -e”,即可开始编译，编译过程大概需要15分钟左右。编译结束之后应该会在当前文件夹下面生成两个文件夹obj和win32。我们进入win32可以看到里面有一个python.exe文件，这个就是我们编译出来的python编译程序。我们可以执行以下这个文件，查看一下是否完整。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Python 3.6.0 (default, Feb  5 2017, 00:57:29) [MSC v.1900 32 bit (Intel)] on win</div><div class="line">32</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>上面那个时间是这个程序的编译时间。</p>
<p>回到PCbuild文件夹，执行一下”rt.bat -q”测试是否成功。这个测试会消耗一定的时间，它会运行405个测试文件。<br>下面是测试完成之后显示的结果。具体这些测试错误的原因还没有找到，但是目前还不妨碍使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">359 tests OK.</div><div class="line"></div><div class="line">2 tests failed:</div><div class="line">    test_strptime test_time</div><div class="line"></div><div class="line">1 test altered the execution environment:</div><div class="line">    test_site</div><div class="line"></div><div class="line">43 tests skipped:</div><div class="line">    test_crypt test_curses test_dbm_gnu test_dbm_ndbm test_devpoll</div><div class="line">    test_epoll test_fcntl test_fork1 test_gdb test_grp test_idle</div><div class="line">    test_ioctl test_kqueue test_nis test_openpty test_ossaudiodev</div><div class="line">    test_pipes test_poll test_posix test_pty test_pwd test_readline</div><div class="line">    test_resource test_smtpnet test_socketserver test_spwd test_ssl</div><div class="line">    test_syslog test_tcl test_threadsignals test_timeout test_tix</div><div class="line">    test_tk test_ttk_guionly test_ttk_textonly test_turtle</div><div class="line">    test_urllib2net test_urllibnet test_wait3 test_wait4 test_winsound</div><div class="line">    test_xmlrpc_net test_zipfile64</div><div class="line"></div><div class="line">Total duration: 16 min 54 sec</div><div class="line">Tests result: FAILURE</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div><div class="line">Windows fatal exception: code 1073807366</div></pre></td></tr></table></figure>
<p>测试完成之后，我们的准备工作也就完成了，之后在阅读源码的时候会经常修改源码，然后编译来查看效果。    </p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;原想着这个寒假主要的学习任务就是阅读python源码，但是碍于一直在写论文，现在才开始着手学习。其实想看python源码的目的很简单，一来对python很感兴趣，想了解它的工作原理。二来以后可能也想从事这方面的工作，所以希望能加深对python的理解。关于阅读源码的总结也会记录下来，跟大家一块分享。这里主要分析的python源码是3.6.0版本的，如果在分析中出现了由于版本不同所带来的问题，欢迎大家一块讨论。&lt;br&gt;阅读源码一定要有目的性，特别是这种大型的编译系统。所以在这里列下一个阅读目标列表及记录完成时间，这个列表也会随着我阅读的情况不断更新。最后的文章也会根据这个的顺序来排布。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据类型&lt;br&gt;1.1 基本类 object&lt;br&gt;1.2 整型类&lt;br&gt;1.3 字符串类&lt;br&gt;1.4 list类&lt;br&gt;1.5 tuple类&lt;br&gt;1.6 dict类&lt;/li&gt;
&lt;li&gt;内建函数&lt;br&gt;…&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/python/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo+NexT中添加algolia search</title>
    <link href="http://yoursite.com/2017/01/29/%E6%8A%80%E6%9C%AF/Hexo/How_to_add_algolia_into_hexo/"/>
    <id>http://yoursite.com/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/</id>
    <published>2017-01-29T12:02:55.000Z</published>
    <updated>2017-02-16T12:11:02.019Z</updated>
    
    <content type="html"><![CDATA[<p>在Hexo里面文章多了以后就会出现难以查找内容的问题，所以就需要一个站内搜索的功能。我大致看了一下NexT上支持的集中站内搜索引擎，<a href="https://swiftype.com/" target="_blank" rel="external">Swiftype</a>因为注册需要一个企业邮箱，而本人学生党并没有企业邮箱。<a href="http://tinysou.com/" target="_blank" rel="external">微搜索</a>好像主页崩了，一直登陆不上去。像百度，google这样的本地搜索UI设计实在是不堪入目。然后就选择了algolia。好在NexT 5.1以上的版本已经支持了algolia搜索，接入也比较的方便。</p>
<p>这是一个法国初创公司做的，致力于在毫秒级时间内完成内容搜索，具体的细节可以上官方网站 <a href="https://www.algolia.com/" target="_blank" rel="external">algolia</a> 。搜索呈现像下面这样:</p>
<img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/result.png" alt="result.png" title="">
<a id="more"></a>
<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><ol>
<li><p>首先，上 <a href="https://www.algolia.com/" target="_blank" rel="external">algolia</a> 上注册一个账号，免费注册的账号可以试用14天，这期间所有的高级功能均可以使用。过了这个期限之后，只有部分功能可以使用，免费账户总共有10,000条记录，每个月有100,000的可操作数，对于一般用户应该是够用了。</p>
<p> 注册了账户之后，页面如下图所示，点击NEW INDEX。需要输入一个index name， 注意这个名字最好只包含字母，数字和下划线(_)，因为后端用js调用数据的时候需要用到这个index name，所以如果这个字符串里面出现了一些跟js语法像冲突的符号很有可能识别不了。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/algolia.png" alt="algolia.png" title="">
</li>
<li><p>完成之后，点击左边那个像钥匙一样的图标，查看自己的API Keys。注意Admin API Key是私密保存的，可以点击右边的小图标进行复制。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/key.png" alt="key.png" title="">
</li>
<li><p>进入站点配置文件_config.yml，在后面加入下面这些内容，其中将具体的值换成自己的Keys，注:不需要引号。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># website search</div><div class="line">## algolia</div><div class="line">algolia:</div><div class="line">  applicationID: &apos;your_Application_ID&apos;</div><div class="line">  apiKey: &apos;your_Search-Only_API_Key&apos;</div><div class="line">  adminApiKey: &apos;your_Admin_API_Key&apos;</div><div class="line">  indexName: &apos;your_Index_Name&apos;</div><div class="line">  chunkSize: 5000</div></pre></td></tr></table></figure>
</li>
<li><p>进入git bash，在根目录下安装algolia。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-algolia --save</div></pre></td></tr></table></figure>
</li>
<li><p>在hexo目录下提交站点。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo algolia #等价于hexo a</div></pre></td></tr></table></figure>
<p> 产生的结果大致如下:</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/hexo_a_result.png" alt="hexo_a_result.png" title="">
<p> 然后我们可以进入algolia的用户中心看一下是否内容已经提交上了。看一下红框中是否有内容。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/algolia_index.png" alt="algolia_index.png" title="">
<p> 有时候可能发现没有上传到数据，在git bash中出现下面这样的显示，这个时候只需要先清理一下缓存，执行一下hexo clean，然后再执行hexo a提交站点即可。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  [Algolia] Identified 0 posts to index.</div></pre></td></tr></table></figure>
<p> 这里要特别注意一下是否存在path字段，如果没有这个字段的话，搜索的时候会因为js无法检索到内容，而直接填入’undefine’，从而出现404异常。</p>
 <img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/undefine.png" alt="undefine.png" title="">
<p> 这个时候我们要进入.\hexo\node_modules\hexo-algolia\lib\command.js文件，添加path字段进storedPost变量中，</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var storedPost = _.pick(data, [&apos;title&apos;, &apos;date&apos;, &apos;slug&apos;, &apos;path&apos;, &apos;content&apos;, &apos;excerpt&apos;, &apos;permalink&apos;]);</div></pre></td></tr></table></figure>
<p> 然后重新提交站点即可。</p>
</li>
<li><p>最后进入主题配置文件，找到algolia_search选项，将enable字段值改为true。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># Algolia Search</div><div class="line">algolia_search:</div><div class="line">  enable: true</div><div class="line">  hits:</div><div class="line">    per_page: 10</div><div class="line">  labels:</div><div class="line">    input_placeholder: Search for Posts</div><div class="line">    hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot;</div><div class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</div></pre></td></tr></table></figure>
<p> 最后重新生产站点，重新部署就完成了。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="页面空白"><a href="#页面空白" class="headerlink" title="页面空白"></a>页面空白</h4><p>在安装的时候出现了文章内容加载不出来，但是查看源码的时候HTML是完整的，而且对应位置的链接也可以，如下图一样：</p>
<img src="/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/black.png" alt="black.png" title="">
<p>查看加载情况的时候发现js调用异常，发现是因为index name里面包含了引号，导致algolia后端的js出现异常，所以页面加载出现问题。这个时候只需要修改一下index name就可以了。</p>
<h4 id="搜索后无法正确跳转"><a href="#搜索后无法正确跳转" class="headerlink" title="搜索后无法正确跳转"></a>搜索后无法正确跳转</h4><p>搜索后出现无法正确跳转的原因是algolia没有获取path字段，所以最后的跳转地址没有正确填充，有可能会出现点击没有反应，也有可能像上文中提到的出现404异常，这个时候只需要按上文所说，在.\hexo\node_modules\hexo-algolia\lib\command.js文件里，添加path字段到storedPost变量中即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var storedPost = _.pick(data, [&apos;title&apos;, &apos;date&apos;, &apos;slug&apos;, &apos;path&apos;, &apos;content&apos;, &apos;excerpt&apos;, &apos;permalink&apos;]);</div></pre></td></tr></table></figure>
<blockquote class="blockquote-center">Kevin.记</blockquote>



]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Hexo里面文章多了以后就会出现难以查找内容的问题，所以就需要一个站内搜索的功能。我大致看了一下NexT上支持的集中站内搜索引擎，&lt;a href=&quot;https://swiftype.com/&quot;&gt;Swiftype&lt;/a&gt;因为注册需要一个企业邮箱，而本人学生党并没有企业邮箱。&lt;a href=&quot;http://tinysou.com/&quot;&gt;微搜索&lt;/a&gt;好像主页崩了，一直登陆不上去。像百度，google这样的本地搜索UI设计实在是不堪入目。然后就选择了algolia。好在NexT 5.1以上的版本已经支持了algolia搜索，接入也比较的方便。&lt;/p&gt;
&lt;p&gt;这是一个法国初创公司做的，致力于在毫秒级时间内完成内容搜索，具体的细节可以上官方网站 &lt;a href=&quot;https://www.algolia.com/&quot;&gt;algolia&lt;/a&gt; 。搜索呈现像下面这样:&lt;/p&gt;
&lt;img src=&quot;/2017/01/29/技术/Hexo/How_to_add_algolia_into_hexo/result.png&quot; alt=&quot;result.png&quot; title=&quot;&quot;&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(三)</title>
    <link href="http://yoursite.com/2017/01/29/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%B8%89)/"/>
    <id>http://yoursite.com/2017/01/29/小说/一个人的能力/(三)/</id>
    <published>2017-01-28T16:37:55.000Z</published>
    <updated>2017-02-16T10:58:07.253Z</updated>
    
    <content type="html"><![CDATA[<p>欧阳时家境不算好，</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欧阳时家境不算好，&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;Kevin.记&lt;/blockquote&gt;
    
    </summary>
    
      <category term="小说" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo+NexT中添加标签和分类</title>
    <link href="http://yoursite.com/2017/01/28/%E6%8A%80%E6%9C%AF/Hexo/How_to_add_tags_page/"/>
    <id>http://yoursite.com/2017/01/28/技术/Hexo/How_to_add_tags_page/</id>
    <published>2017-01-28T10:02:55.000Z</published>
    <updated>2017-02-16T10:57:53.184Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加标签和分类"><a href="#添加标签和分类" class="headerlink" title="添加标签和分类"></a>添加标签和分类</h3><p>在Hexo中，有两种管理的方式，一种是使用分类的方式，这是一种有层次的分类方式，适用于大类别下套小类别的分类方式，例如：编程语言-python等。而还有一种是使用标签的方式，这种方式适用于同一级别的类别分类方式，例如：小说，论文等。<br>对应于具体的文章，可以在Front-matter中进行设定，例如：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 标签</div><div class="line">tages: </div><div class="line"> -小说</div><div class="line"> -论文</div><div class="line">---</div><div class="line"></div><div class="line">---</div><div class="line">title: 分类</div><div class="line">categories: </div><div class="line"> -编程语言</div><div class="line"> -python</div><div class="line">---</div></pre></td></tr></table></figure>
<p>在这种情况下，Hexo将会自动的将每一篇文章进行归档。</p>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>在很多时候我们点击标签页和分类页查看具体情况的时候会出现一些问题。这里描述一下常见的两种情况。</p>
<h4 id="文件路径包含中文"><a href="#文件路径包含中文" class="headerlink" title="文件路径包含中文"></a>文件路径包含中文</h4><p>在很多时候会报下面这种错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TypeError: The header content contains invalid characters</div></pre></td></tr></table></figure>
<p>出现这种问题的主要原因是路径中出现了中文，只需要将分类的路径改成英文即可。</p>
<h4 id="没有生产标签页和分类页"><a href="#没有生产标签页和分类页" class="headerlink" title="没有生产标签页和分类页"></a>没有生产标签页和分类页</h4><p>有时候还会出现下面这种问题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cannot get /tags/</div><div class="line">cannot get /categories/</div></pre></td></tr></table></figure>
<p>出现这种问题是因为配置路径和实际路径不对。配置路径在主题文件夹(.\hexo\themes\next)中的_config.yml文件里面。找到下面这样的描述，例如我使用tags表示标签页。需要检查一下是否在.\hexo\source文件夹中存在tags文件夹，如果不存在则需要创建tags标签页。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  about: /about</div><div class="line">  #archives: /archives</div><div class="line">  #sitemap: /sitemap.xml</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure>
<p>创建标签页的方法是使用hexo中的指令来添加，以tags为例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div></pre></td></tr></table></figure>
<p>执行这条指令之后，在.\hexo\source文件夹下会新增一个tags文件夹，里面有一个index.md。打开来之后里面只有title和date属性，我们需要添加一个type属性，修改成下面这样。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: tags</div><div class="line">date: 2017-01-28 01:55:09 #时间随意</div><div class="line">type: tags</div><div class="line">---</div></pre></td></tr></table></figure>
<p>分类页的情况一样，需要把type属性改成categories</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">date: 2017-01-28 02:15:09 #时间随意</div><div class="line">type: categories</div><div class="line">---</div></pre></td></tr></table></figure>
<p>完成修改之后重新生成部署即可。</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加标签和分类&quot;&gt;&lt;a href=&quot;#添加标签和分类&quot; class=&quot;headerlink&quot; title=&quot;添加标签和分类&quot;&gt;&lt;/a&gt;添加标签和分类&lt;/h3&gt;&lt;p&gt;在Hexo中，有两种管理的方式，一种是使用分类的方式，这是一种有层次的分类方式，适用于大类别下套小类别的分类方式，例如：编程语言-python等。而还有一种是使用标签的方式，这种方式适用于同一级别的类别分类方式，例如：小说，论文等。&lt;br&gt;对应于具体的文章，可以在Front-matter中进行设定，例如：&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(二)</title>
    <link href="http://yoursite.com/2017/01/27/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%BA%8C)/"/>
    <id>http://yoursite.com/2017/01/27/小说/一个人的能力/(二)/</id>
    <published>2017-01-27T11:06:55.000Z</published>
    <updated>2017-02-16T10:58:11.974Z</updated>
    
    <content type="html"><![CDATA[<p>上午最后一节课总是显得那么漫长，特别还是数学课的时候，大家一边将老师写在黑板上的公式抄到笔记本之中，一边偷瞄墙上挂的时钟。等着秒钟一步一步的向前走，走完一圈又回到原点，好像时间又回到了最初的原点一般，停滞不前。终于，下课铃声响起，而老师上课的内容也基本讲完，高中的老师总是喜欢来下课之后再多占用一点时间，而刘老师也是一样，“我把作业布置完咱们就下课，今天做完习题册圆锥曲线最后的双曲线部分，每一个人最好都去推导一下三种圆锥曲线的表达式是怎么来的，有助于你们对这部分内容的理解，下课”。靠门边的同学像是听到了一声哨响一般，直接提着包冲出了教室。而李情旭，依旧默默的坐在那，回顾着刚刚上课记得笔记。“你怎么知道这节课老师心情不好的呀？”胡梦边收拾书包，边跟他闲扯。“因为我有超能力。”李情旭没有回头，一本正经的说出这句话。“你再扯，我吃饭去啦，拜拜”胡梦认为他在开玩笑，就打算去吃饭了。“拜”李情旭看着胡梦的背影默默的离开。</p>
<a id="more"></a>
<p>李情旭从出生开始，眼中的世界就和别人的不太相同。他看到的每一个人，头上都有一个小光点，闪烁着不同的光芒。他父母也带他去医院查过，但是并没有查出什么问题来。想着这件事并不会影响正常生活，所以大家也都没有再深究。而好奇心驱使着李情旭想探明这个光点究竟是什么，而不同的色彩又代表着什么。他开始观察每一个人头上的光点，渐渐发现当人们面带笑容时，头上的光点往往散发出黄色的光芒，而当人们脸上带有愁容的时候，头上的光芒往往是蓝色的。此刻，他意识到，这些光芒代表的是每一个人的内心情绪。而刘老师进门的时候，她的小光点散发着让人警觉的红色，这表示愤怒。</p>
<p>看了看墙上的时钟，距离放学已经过去半个小时了，这个时候他也该准备去吃饭了。他起身收拾东西，发现坐在后面的欧阳时还在那里看书，头顶上泛着深邃的蓝光。蓝色的光线在寂静的教室中显得格外的耀眼，空气中似乎都能感受出他的忧伤。李情旭看了看欧阳时，发现他目光呆滞，书中的文字并没有进入他的脑海。“欧阳时，你还不走呀？”李情旭决定跟他聊一下。“啊，等会就走。”欧阳时惊的一下抬起头，似乎才回过神来。“时间也不早了，一块去吃饭吧”，听到这句话，欧阳时才想起来看看时间，发现已经过了半个多小时了。“都这么晚啦，我不吃饭了”欧阳时把目光重新转向了书本。“大中午不吃饭下午哪有力气上课啊，现在也不算太晚，汤粉应该还有，走吧。”李情旭一把把他的书抽出来，放到自己桌上。欧阳时看到这种情况，感觉也不好再拒绝了，就只能勉强答应了他，“那走吧”。</p>
<p>午后的食堂已经不那么拥挤，他们各自买了一份汤粉，在食堂一个偏僻的角落坐下。这个位置是李情旭找的，他知道欧阳时现在心情很差，估计是什么不太容易说出口的事，所以找了一个偏僻的地方，这样才能更好的跟他谈心。“我看你刚刚魂不守舍的，有心事啊？”李情旭也比较直接，似乎并不打算拐弯抹角。“没有啊，应该是上课上的累了”欧阳时用筷子拨弄着自己碗里的面，似乎并不打算吃。“还没有心事，你的表情都写在脸上了，别憋着，说出来就好了，是不是看上哪个妹子不好意思说呀”李情旭看着他头上的蓝光，希望通过一句玩笑话转变一下气氛。“没，我也没资本看上别人呀”欧阳时看了看李情旭，似乎想说点什么，却又不知道该如何开口。“那你咋啦，没事，说出来就会好受了，而且我不跟别人说的”李情旭继续用语言来缓释他的心理防线，心中的事不愿意说无外乎就是怕别人知道，其实每个人都知道，倾诉是最好的释压的方式；只是，我们缺少一个能信任的倾听者。欧阳时看了看他眼中的班长，他第一次感受到有人如此关心自己。“我，家里出了点事。”</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上午最后一节课总是显得那么漫长，特别还是数学课的时候，大家一边将老师写在黑板上的公式抄到笔记本之中，一边偷瞄墙上挂的时钟。等着秒钟一步一步的向前走，走完一圈又回到原点，好像时间又回到了最初的原点一般，停滞不前。终于，下课铃声响起，而老师上课的内容也基本讲完，高中的老师总是喜欢来下课之后再多占用一点时间，而刘老师也是一样，“我把作业布置完咱们就下课，今天做完习题册圆锥曲线最后的双曲线部分，每一个人最好都去推导一下三种圆锥曲线的表达式是怎么来的，有助于你们对这部分内容的理解，下课”。靠门边的同学像是听到了一声哨响一般，直接提着包冲出了教室。而李情旭，依旧默默的坐在那，回顾着刚刚上课记得笔记。“你怎么知道这节课老师心情不好的呀？”胡梦边收拾书包，边跟他闲扯。“因为我有超能力。”李情旭没有回头，一本正经的说出这句话。“你再扯，我吃饭去啦，拜拜”胡梦认为他在开玩笑，就打算去吃饭了。“拜”李情旭看着胡梦的背影默默的离开。&lt;/p&gt;
    
    </summary>
    
      <category term="小说" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>一个人的能力(一)</title>
    <link href="http://yoursite.com/2017/01/27/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/(%E4%B8%80)/"/>
    <id>http://yoursite.com/2017/01/27/小说/一个人的能力/(一)/</id>
    <published>2017-01-27T10:51:55.000Z</published>
    <updated>2017-02-16T10:58:03.429Z</updated>
    
    <content type="html"><![CDATA[<p>老师伴着上课的曲子进门，班长李情旭看了一眼老师，扭头对同桌胡梦说：“这节课别睡觉了，刘老师心情很不好”。老师走上讲台，把考试卷子放在讲台桌子上，把U盘插在电脑上，像往常一样， 准备把上课的课件拷到电脑上。《土耳其进行曲》还在耳边回荡，也不清楚这所学校为什么要用这个曲子作为上课的铃声。估计是它的节奏比较欢快，能让人产生一种愉悦的心情以面对接下来四十五分钟的枯燥。老师还在操作着电脑，课间喧闹的气氛还没有消散，大家都七嘴八舌的讨论着。胡梦抬了抬头，看了看老师，像往常一样，没有任何的变化。胡梦又把头低了下来，枕在自己的手上。嘟囔了一句:“别闹”。李情旭也没有再理睡梦中的同桌，把目光转向投影出来的电脑画面。</p>
<a id="more"></a>
<p>这个班级的座位与大多数中学相同，每两排座位靠拢成一个大排，一共四大排，每个大排中间留出够一个人正常通行的空隙。而投影的位置在靠近窗户的位置，大概在第三大排的前方偏左。他们俩的位置在第三排的第二行。李情旭坐在左边，胡梦在右边。刘老师则在胡梦旁边过道的正前方。</p>
<p>这位老师姓刘，全名叫刘蕊，是一位年轻有为的女老师，不到三十岁就已经评上了国家特级教师，讲的是数学课，教学主张因材施教，在她的心中，每一个人都有其所能适应的教学方式，有些人给一些压力，才能将心思放在学习上，有一些人需要鼓励，才能进步，给压力反倒会让他们手足无措。还有一些人自我约束能力强，自己能把控好自己，约束过多了反倒会产生叛逆心理。李情旭属于第一种人，而胡梦则是第二种。在胡梦眼中，刘老师是一个和蔼可亲的人，经常找自己谈心，所以她的课 是胡梦最放松的课。</p>
<p>投影里显示着老师的操作，与往常不同的是，这次刘老师除了从U盘里拷贝了一个课件文档以外，还拷贝了一份表格文档。他将表格文档打开，每个人的学号，姓名，每道题的得分赫然投影到幕布之上。他抬起头，把两只手放在桌子上，静静的看着下面的同学。大家还在喧闹着，慢慢的，一些同学注意到了老师的举动，逐渐降低了自己的音量。但是，教室里依旧存在着细声细语。似乎总有那么一些人，无法控制住自己，总想把自己心里的八卦说出来。第二排第二行的高忆侧了下头，低声对着同桌柳知说：“昨天她的鬓发上就缠着那个线头，今天还在那，她昨天晚上一定没有洗头”。柳知一脸诧异的看着她：“这你都记得，你每天都在看些什么啊”。“你们什么时候停下来，我什么时候开始上课。”说完这话，刘老师坐了下来，静静的看着每一个人。大家看着讲台上表情严肃的老师，都知道情况不对。教室一时间变得十分寂静，没有任何的声响，电扇的声音在头顶上盘旋。</p>
<p>“你们怎么不讲了，继续讲呀”带着挑衅的语气，她的这句话划破了死一般的寂静。如果说刚才的沉默让每一个人都神情紧张，那么现在，每一个人已经开始畏惧。大家都低下了头，生怕与老师有过多的眼神接触。“你们看看你们的成绩”，刘老师抬起了手，不停的点着投影在幕布上的表格。大家都抬起了头，努力的寻找自己的名字，看看自己处在一个什么样的位置。</p>
<p>实际上，这个班的数学成绩一直是全校排名第一，但是刘老师认为，如果一直只看全校成绩，第一名的优越感容易让大家松懈下来，迟早会被人超越。所以，她自己设计了一种成绩表示，她称之为自比分。每次考试之后，根据全年级的平均分，确定这次考试的难度系数，然后将每个人的成绩统一到同一难度系数的分值下。然后每次考试的成绩都是这次考试对上次考试的分数差值。自比分强调每个人应该与自己做比较，正值说明你在进步，负值说明你在退步。而这次考试，除了胡梦，高忆和欧阳时，其他人都是负值。但是高忆和欧阳时是满分，而胡梦依旧是全班最后一名。</p>
<p>刘老师等着同学们寻找自己的名字，她环顾四周，看着大家脸上的表情。这时发现胡梦趴在那，大吼了一声，”胡梦”，胡梦猛的抬起了头，眼神充满着惊恐。”别以为你自比分高就心安理得了，你现在成绩还是全班最后一名，你努力的还不够。” 其实，胡梦并不知道自己的自比分到底是多少，听到刘老师这么一说，才看向投影里的成绩表，原来自己的自比分相较于上一次考试高了一个档位，在全校的排名也前进了一百多名。虽然刚刚被老师说了一通，但是看到这个分数心里还是很高兴的。</p>
<p>“好了，还想看成绩的同学下课再看，我们现在开始讲试卷，班长，把这些试卷发下去。”刘老师边说边把电脑上的表格文件关掉。李情旭走到老师旁边，拿走了一打试卷，分发给大家。</p>
<p>回到桌位上，李情旭看了一眼胡梦，胡梦拿到自己的试卷，嘟囔了一句:”这样真的有效。”，”什么有效？”李情旭很不解的看着她。”没啥”。胡梦抬起头，看向老师。而李情旭微微一笑，也转头看向了老师。</p>
<blockquote class="blockquote-center">Kevin.记</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老师伴着上课的曲子进门，班长李情旭看了一眼老师，扭头对同桌胡梦说：“这节课别睡觉了，刘老师心情很不好”。老师走上讲台，把考试卷子放在讲台桌子上，把U盘插在电脑上，像往常一样， 准备把上课的课件拷到电脑上。《土耳其进行曲》还在耳边回荡，也不清楚这所学校为什么要用这个曲子作为上课的铃声。估计是它的节奏比较欢快，能让人产生一种愉悦的心情以面对接下来四十五分钟的枯燥。老师还在操作着电脑，课间喧闹的气氛还没有消散，大家都七嘴八舌的讨论着。胡梦抬了抬头，看了看老师，像往常一样，没有任何的变化。胡梦又把头低了下来，枕在自己的手上。嘟囔了一句:“别闹”。李情旭也没有再理睡梦中的同桌，把目光转向投影出来的电脑画面。&lt;/p&gt;
    
    </summary>
    
      <category term="小说" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="一个人的能力" scheme="http://yoursite.com/categories/%E5%B0%8F%E8%AF%B4/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>序</title>
    <link href="http://yoursite.com/2017/01/22/Preface/"/>
    <id>http://yoursite.com/2017/01/22/Preface/</id>
    <published>2017-01-22T13:34:58.000Z</published>
    <updated>2017-02-06T18:44:30.398Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Hi-Thinking"><a href="#Hi-Thinking" class="headerlink" title="Hi, Thinking!"></a>Hi, Thinking!</h4><p>现实世界充满喧嚣，启程时的誓言已被掩盖。路途中四处观花，轻尝美景的芬芳。丽影无数，却只略观，此时想起回眸，不晚，不晚。<br>掩埋野蜂的狂浪，静坐思考，揭开藏在深处的远方。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Hi-Thinking&quot;&gt;&lt;a href=&quot;#Hi-Thinking&quot; class=&quot;headerlink&quot; title=&quot;Hi, Thinking!&quot;&gt;&lt;/a&gt;Hi, Thinking!&lt;/h4&gt;&lt;p&gt;现实世界充满喧嚣，启程时的誓言已被掩盖。路途中四处观花，轻尝
    
    </summary>
    
    
  </entry>
  
</feed>
